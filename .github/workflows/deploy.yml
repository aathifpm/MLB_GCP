name: Deploy MLB Storyteller

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions configuration
permissions:
  contents: write
  pages: write
  id-token: write
  deployments: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io --quiet

    - name: Build and Push MongoDB Container
      run: |
        docker build -t gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/mongodb:latest -f docker/mongodb.Dockerfile .
        docker push gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/mongodb:latest

    - name: Build and Push Redis Container
      run: |
        docker build -t gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/redis:latest -f docker/redis.Dockerfile .
        docker push gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/redis:latest

    - name: Create env file
      run: |
        echo "MONGODB_URI=mongodb://mongodb-service:27017" >> .env
        echo "MONGODB_DB_NAME=mlb_storyteller" >> .env
        echo "REDIS_URL=redis://redis-service:6379" >> .env
        echo "CACHE_ENABLED=True" >> .env
        echo "CACHE_TTL=3600" >> .env
        echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}" >> .env
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

    - name: Run tests
      run: |
        # Install Docker Compose v2
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        # Run tests using Docker Compose v2
        docker compose -f docker-compose.test.yml up --exit-code-from tests

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './frontend'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main'

    - name: Deploy Services to GCP
      if: github.ref == 'refs/heads/main'
      run: |
        # Deploy MongoDB
        gcloud run deploy mongodb-service \
          --image gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/mongodb:latest \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated \
          --port 27017

        # Deploy Redis
        gcloud run deploy redis-service \
          --image gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/redis:latest \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated \
          --port 6379

    - name: Deploy Application to Cloud Run
      if: github.ref == 'refs/heads/main'
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: mlb-storyteller
        region: ${{ secrets.GCP_REGION }}
        env_vars: |
          MONGODB_URI=mongodb://mongodb-service:27017
          REDIS_URL=redis://redis-service:6379
          GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }} 