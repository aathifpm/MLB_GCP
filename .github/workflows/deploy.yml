name: Deploy MLB Storyteller

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions configuration
permissions:
  contents: write
  pages: write
  id-token: write
  deployments: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}'
        create_credentials_file: true
        export_environment_variables: true

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io --quiet

    - name: Build and Push Application Container
      run: |
        docker build -t gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/mlb-storyteller:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/mlb-storyteller:${{ github.sha }}

    - name: Setup Cloud Infrastructure
      if: github.ref == 'refs/heads/main'
      run: |
        # Enable required APIs
        gcloud services enable \
          redis.googleapis.com \
          datastore.googleapis.com \
          vpcaccess.googleapis.com \
          servicenetworking.googleapis.com \
          run.googleapis.com \
          secretmanager.googleapis.com

        # Update or create secret
        if gcloud secrets describe GOOGLE_CLOUD_CREDENTIALS 2>/dev/null; then
          echo "${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}" | gcloud secrets versions add GOOGLE_CLOUD_CREDENTIALS --data-file=-
        else
          echo "${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}" | gcloud secrets create GOOGLE_CLOUD_CREDENTIALS --data-file=-
        fi

        # Create or update VPC network
        gcloud compute networks create mlb-network --subnet-mode=auto 2>/dev/null || true

        # Create or update Redis instance
        if ! gcloud redis instances describe mlb-redis --region=${{ secrets.GCP_REGION }} 2>/dev/null; then
          gcloud redis instances create mlb-redis \
            --size=1 \
            --region=${{ secrets.GCP_REGION }} \
            --network=mlb-network \
            --redis-version=redis_6_x || true
        fi

        # Get Redis IP with retry
        for i in {1..5}; do
          REDIS_IP=$(gcloud redis instances describe mlb-redis --region=${{ secrets.GCP_REGION }} --format='get(host)') && break || sleep 15
        done
        echo "REDIS_IP=$REDIS_IP" >> $GITHUB_ENV

        # Setup VPC connector
        gcloud compute networks vpc-access connectors create mlb-connector \
          --network=mlb-network \
          --region=${{ secrets.GCP_REGION }} \
          --range=10.8.0.0/28 2>/dev/null || true

        # Set environment variables
        echo "DATASTORE_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}" >> $GITHUB_ENV
        echo "DATASTORE_NAMESPACE=mlb_storyteller" >> $GITHUB_ENV

        
    - name: Create env file
      run: |
        echo "DATASTORE_PROJECT=${DATASTORE_PROJECT}" >> .env
        echo "DATASTORE_NAMESPACE=${DATASTORE_NAMESPACE}" >> .env
        echo "REDIS_URL=redis://${REDIS_IP}:6379" >> .env
        echo "CACHE_ENABLED=True" >> .env
        echo "CACHE_TTL=3600" >> .env
        echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}" >> .env
        echo "GOOGLE_APPLICATION_CREDENTIALS='${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}'" >> .env
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> .env

    - name: Run tests
      run: |
        # Install Docker Compose v2
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
        # Run tests using Docker Compose v2
        docker compose -f docker-compose.test.yml up --exit-code-from tests

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Copy index.html to frontend directory
      run: |
        cp index.html frontend/
        
    - name: Upload artifact 
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

    - name: Deploy Application to Cloud Run
      if: github.ref == 'refs/heads/main'
      run: |
        gcloud run deploy ${{ secrets.SERVICE_NAME }} \
          --image gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT }}/mlb-storyteller:${{ github.sha }} \
          --platform managed \
          --region ${{ secrets.REGION }} \
          --vpc-connector mlb-connector \
          --allow-unauthenticated \
          --timeout 300 \
          --cpu 1 \
          --memory 1024Mi \
          --set-env-vars ^
            DATASTORE_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }},^
            DATASTORE_NAMESPACE=mlb_storyteller,^
            REDIS_URL=redis://${REDIS_IP}:6379,^
            GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }},^
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},^
            GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/google-credentials.json,^
            CORS_ORIGINS=*,^
            CORS_ALLOW_CREDENTIALS=false \
          --set-secrets GOOGLE_CLOUD_CREDENTIALS=GOOGLE_CLOUD_CREDENTIALS:latest \
          --add-cloudsql-instances=${{ secrets.GOOGLE_CLOUD_PROJECT }}:${{ secrets.REGION }}:mlb-db
